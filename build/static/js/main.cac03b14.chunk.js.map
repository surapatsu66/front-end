{"version":3,"sources":["components/env.js","components/ApiurlToken.js","components/Header.js","components/DisplayBoard.js","components/Movies.js","components/CreateMovie.js","services/MovieService.js","App.js","serviceWorker.js","components/AppError.js","index.js"],"names":["module","exports","process","development","bearer_token","API_URL","production","Header","React","createElement","style","width","padding","backgroundColor","color","textAlign","DisplayBoard","_ref","numberOfMovies","getAllMovies","className","type","onClick","e","Movies","movies","searchText","setSearchText","useState","searchResults","setSearchResults","isSearching","setIsSearching","length","MovieRow","movie","index","key","title","genre","director","release_year","movieTable","map","display","justifyContent","alignItems","fontSize","border","borderRadius","marginRight","placeholder","value","onChange","target","async","response","fetch","concat","data","json","returnCode","error","console","colSpan","CreateMovies","onChangeForm","createMovie","htmlFor","name","id","aria-describedby","env","require","apiConfig","headers","Authorization","bearerToken","App","setMovie","setMovies","setNumberOfMovies","useEffect","then","log","CreateMovie","method","body","JSON","stringify","fetchAllMovies","Boolean","window","location","hostname","match","ErrorComponent","AppError","Component","constructor","arguments","state","hasError","componentDidCatch","info","this","setState","render","children","props","getDerivedStateFromError","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cac03b14.chunk.js","sourcesContent":["var env = process.env.NODE_ENV || \"development\";\n//var env = process.env.NODE_ENV || \"productuin\";\n\nmodule.exports = env;","var apiConfig = {\n    development: {\n        bearer_token: \"1234567890\",\n        API_URL: \"https://api.se-rmutl.net/\",\n    },\n    production: {\n        bearer_token: \"1234567890\",\n        API_URL: \"https://api.se-rmutl.net/\",\n    },\n};\nmodule.exports = apiConfig;","import React from 'react'\n\nexport const Header = () => {\n\n    const headerStyle = {\n\n        width: '100%',\n        padding: '2%',\n        backgroundColor: \"red\",\n        color: 'white',\n        textAlign: 'center'\n    }\n\n    return(\n        <div style={headerStyle}>\n            <h1>React With NodeJS</h1>\n        </div>\n    )\n}","import React from 'react'\n\nexport const DisplayBoard = ({numberOfMovies, getAllMovies}) => {\n\n    \n    return(\n        <div style={{backgroundColor:'green'}} className=\"display-board\">\n            <h4 style={{color: 'white'}}>Movies Created</h4>\n            <div className=\"number\">\n            {numberOfMovies}\n            </div>\n            <div className=\"btn\">\n                <button type=\"button\" onClick={(e) => getAllMovies()} className=\"btn btn-warning\">Get all Movies</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport \"../App.css\";\n\n\n\nexport const Movies = ({ movies }) => {\n  const [searchText, setSearchText] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`https://api.se-rmutl.net//api/movie/search?search_text=${searchText}`);\n      const data = await response.json();\n\n      if (data.returnCode === 1) {\n        setSearchResults(data.data);\n        setIsSearching(true);\n      } else {\n        setSearchResults([]);\n        setIsSearching(false);\n      }\n    } catch (error) {\n      console.error('Error searching for movies:', error);\n    }\n  };\n\n\n  if (movies.length === 0) return null;\n\n  const MovieRow = (movie, index) => {\n    return (\n      <tr key={index} className={index % 2 === 0 ? \"odd\" : \"even\"}>\n        <td>{index + 1}</td>\n        <td>{movie.title}</td>\n        <td>{movie.genre}</td>\n        <td>{movie.director}</td>\n        <td>{movie.release_year}</td>\n      </tr>\n    );\n  };\n\n  const movieTable = isSearching ?\n    searchResults.map((movie, index) => MovieRow(movie, index)) :\n    movies.map((movie, index) => MovieRow(movie, index));\n\n  return (\n    <div className=\"container\">\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", alignItems: \"center\" }}>\n        <div>\n          <h2>Movies</h2>\n          <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <input\n              type=\"text\"\n              className=\"Search_input\"\n              style={{\n                padding: \"10px\",\n                fontSize: \"16px\",\n                border: \"1px solid #ccc\",\n                borderRadius: \"5px\",\n                width: \"300px\",\n                marginRight: \"10px\",\n              }}\n              placeholder=\"Enter The Title Of Movie\"\n              value={searchText}\n              onChange={(e) => setSearchText(e.target.value)}\n            />\n            <button\n              className=\"btn btn-dark\"\n              style={{ padding: \"10px\", borderRadius: \"5px\" }}\n              onClick={handleSearch}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <hr />\n\n      <table className=\"table table-striped table-dark\">\n        <thead className=\"table-dark\">\n          <tr>\n            <th>Movie Id</th>\n            <th>Title</th>\n            <th>Genre</th>\n            <th>Director</th>\n            <th>Release</th>\n          </tr>\n        </thead>\n        <tbody>\n          {movieTable}\n          {isSearching && searchResults.length === 0 && <tr><td colSpan=\"5\">No movies found</td></tr>}\n        </tbody>\n      </table>\n    </div>\n  );\n};","import React from 'react';\n\n\nconst CreateMovies = ({onChangeForm,createMovie}) => {\n\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-7 mrgnbtm\">\n                <h2>Create Movies</h2>\n                <form>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"exampleInputEmail1\">Title</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)}  className=\"form-control\" name=\"title\" id=\"title\" aria-describedby=\"emailHelp\" placeholder=\"Title\" />\n                        </div>\n                        <div className=\"form-group col-md-6\">\n                            <label htmlFor=\"exampleInputPassword1\">Genre</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"genre\" id=\"genre\" placeholder=\"Genre\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"exampleInputEmail1\">Director</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"director\" id=\"director\" aria-describedby=\"emailHelp\" placeholder=\"Director\" />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"form-group col-md-12\">\n                            <label htmlFor=\"exampleInputEmail1\">Release</label>\n                            <input type=\"text\" onChange={(e) => onChangeForm(e)} className=\"form-control\" name=\"release_year\" id=\"release_year\" aria-describedby=\"emailHelp\" placeholder=\"Release\" />\n                        </div>\n                    </div>\n                    <button type=\"button\" onClick= {(e) => createMovie()} className=\"btn btn-primary\">Create</button>\n                </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateMovies;","const env = require(\"../components/env.js\")\nconst apiConfig = require(\"../components/ApiurlToken.js\")[env];\n// export async function getAllMovies() {\n//     try{\n//         const response = await fetch('http://localhost:3001/api/movies/all');\n//         return await response.json();\n//     }catch(error) {\n//         return [];\n//     }\n\n\n// }\n\n// export async function getAllMovies() {\n//     try{\n//         const response = await fetch('http://localhost:3001/api/movies/');\n//         //const response = await fetch('/api/movie/all');\n//         return await response.json();\n//     }catch(error) {\n//         return [];\n//     }\n    \n// }\n\n\n// export async function createMovie(data) {\n//     const response = await fetch('http://localhost:3001/api/movie', {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify({movie: data})\n//       })\n//     return await response.json();\n// }\n\n\n\nexport async function getAllMovies() {\n\n    try{\n        //const response = await fetch('/api/users');\n         const response = await fetch(`${apiConfig.API_URL}/api/movie/all`, {\n            headers: {\n                Authorization: `Bearer ${apiConfig.bearerToken}`,\n            },\n         });\n        //const response = await fetch('/api/movie/all');\n        return await response.json();\n    }catch(error) {\n        return [];\n    }\n    \n}\n\n//---- ยังไม่เสร็จ ----\nexport async function createMovie(data) {\n    const response = await fetch(`${apiConfig.API_URL}/api/movie/insert`, {\n        method: 'POST',\n        headers: {\n            headers: {'Content-Type': 'application/json'},\n            Authorization: `Bearer ${apiConfig.bearerToken}`,\n        },\n        body: JSON.stringify({...data})\n      });\n    return await response.json();\n}","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Header } from \"./components/Header\";\nimport { DisplayBoard } from \"./components/DisplayBoard\";\n//----------------\nimport { Movies } from \"./components/Movies\";\nimport CreateMovie from \"./components/CreateMovie\";\nimport { getAllMovies, createMovie } from \"./services/MovieService\";\n\nfunction App() {\n  /*\n  const [user, setUser] = useState({})\n  const [users, setUsers] = useState([])\n  const [numberOfUsers, setNumberOfUsers] = useState(0)\n*/\n  //--------------\n  const [movie, setMovie] = useState({});\n  const [movies, setMovies] = useState([]);\n  const [numberOfMovies, setNumberOfMovies] = useState(0);\n\n  /*\n  const userCreate = (e) => {\n\n      createUser(user)\n        .then(response => {\n          console.log(response);\n          setNumberOfUsers(numberOfUsers+1)\n      });\n  }\n*/\n  const movieCreate = (e) => {\n    createMovie(movie).then((response) => {\n      console.log(response);\n      setNumberOfMovies(numberOfMovies + 1);\n    });\n  };\n\n  /*\n  const fetchAllUsers = () => {\n    getAllUsers()\n      .then(users => {\n        console.log(users)\n        setUsers(users);\n        setNumberOfUsers(users.length)\n      });\n  }\n*/\n  const fetchAllMovies = () => {\n    getAllMovies().then((movies) => {\n      console.log(movies);\n      setMovies(movies);\n      setNumberOfMovies(movies.length);\n    });\n  };\n\n  useEffect(() => {\n    /*\n      getAllUsers()\n      .then(users => {\n         console.log(users)\n        setUsers(users);\n         setNumberOfUsers(users.length)\n      });\n*/\n    getAllMovies().then((movies) => {\n      console.log(movies);\n      setMovies(movies);\n      setNumberOfMovies(movies.length);\n    });\n  }, []);\n\n  /*\n  const onChangeForm = (e) => {\n      if (e.target.name === 'firstname') {\n          user.firstName = e.target.value;\n      } else if (e.target.name === 'lastname') {\n          user.lastName = e.target.value;\n      } else if (e.target.name === 'email') {\n          user.email = e.target.value;\n      }\n      setUser(user)\n  }\n  */\n\n  const onChangeForm = (e) => {\n    if (e.target.name === \"title\") {\n      movie.title = e.target.value;\n    } else if (e.target.name === \"genre\") {\n      movie.genre = e.target.value;\n    } else if (e.target.name === \"director\") {\n      movie.director = e.target.value;\n    } else if (e.target.name === \"release_year\") {\n      movie.release_year = e.target.value;\n    }\n    setMovie(movie);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div className=\"container mrgnbtm\">\n        <div className=\"row\">\n          {/* <div className=\"col-md-8\">\n                  <CreateUser \n                    user={user}\n                    onChangeForm={onChangeForm}\n                    createUser={userCreate}\n                    >\n                  </CreateUser>\n    </div> */}\n          <div className=\"col-md-8\">\n            <CreateMovie\n              movie={movie}\n              onChangeForm={onChangeForm}\n              createMovie={movieCreate}\n            ></CreateMovie>\n          </div>\n          <div className=\"col-md-4\">\n            <DisplayBoard\n              numberOfMovies={numberOfMovies}\n              getAllMovies={fetchAllMovies}\n            ></DisplayBoard>\n          </div>\n        </div>{\" \"}\n        {/* <div className=\"row mrgnbtm\">\n            <Users users={users}></Users>\n          </div>  */}\n        <div className=\"row mrgnbtm\">\n          <Movies movies={movies}></Movies>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst ErrorComponent = () => {\n  return <h1>Something went wrong</h1>;\n};\n\nexport class AppError extends React.Component {\n  \n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError = error => {\n    return { hasError: true };\n  };\n\n  componentDidCatch = (error, info) => {\n    this.setState({ error, info });\n  };\n\n  render() {\n    const { hasError } = this.state;\n    const { children } = this.props;\n\n    return hasError ? <ErrorComponent /> : children;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppError } from './components/AppError';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppError>\n      <App />\n    </AppError>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}